{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = \"46773750-2567d69edc75d4703fc28c418\";\nconst BASE_URL = 'https://pixabay.com/api/';\n\n\n\n\n  export const fetchImages = async (query, page = 1, per_page = 15) => {\n    try {\n        const response = await axios.get(BASE_URL, {\n            params: {\n                key: API_KEY,\n                q: query,\n                image_type: 'photo',\n                orientation: 'horizontal',\n                safesearch: true,\n                per_page,\n                page\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.log(\"Error fetching images:\", error);\n        throw error;\n    }\n};\n\n\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nlet lightbox;\n\nexport function renderImages(images) {\n  const gallery = document.querySelector('.gallery');\n  const markup = images\n    .map(\n      ({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) =>\n        `<li>\n          <a href=\"${largeImageURL}\">\n            <div class=\"image-info\">\n              <img src=\"${webformatURL}\" alt=\"${tags}\" width=\"300\" height=\"200\">\n              <p><strong>Likes:</strong> ${likes}</p>\n              <p><strong>Views:</strong> ${views}</p>\n              <p><strong>Comments:</strong> ${comments}</p>\n              <p><strong>Downloads:</strong> ${downloads}</p>\n            </div>\n          </a>\n        </li>`\n    )\n    .join('');\n\n  gallery.insertAdjacentHTML('beforeend', markup);\n\n  if (!lightbox) {\n    lightbox = new SimpleLightbox('.gallery a');\n  } else {\n    lightbox.refresh();\n  }\n}\n\n\n","import { fetchImages } from './js/pixabay-api';\nimport { renderImages } from './js/render-functions';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst form = document.querySelector(\".search-form\");\nconst loader = document.querySelector(\".loader\");\nconst gallery = document.querySelector(\".gallery\");\nconst loadBtn = document.querySelector(\".btn-load\");\n\nlet query = '';\nlet page = 1;\nlet per_page = 15;\n\nform.addEventListener('submit', async (event) => {\n    event.preventDefault();\n     query = event.currentTarget.elements.searchQuery.value.trim();\n\n    if(!query) {\n        iziToast.error({ \n            title: 'Error', message: 'Будь ласка, введіть пошуковий запит' });\n            return;\n    }\n     page = 1;\n     gallery.innerHTML = '';\n     loadBtn.style.display = 'none';\n     fetchRenderImages();\n});\nconst fetchRenderImages = async () => {\n    try {\n        loader.style.display ='block';\n        const data = await fetchImages(query, page, per_page);\n        loader.style.display = 'none';\n\n        if(data.hits.length === 0) {\n            iziToast.info({\n                message: 'На жаль, немає зображень, які відповідають вашому пошуковому запиту. Будь ласка, спробуйте ще раз!'\n            });\n            loadBtn.style.display = 'none';\n            return;\n        }\n        renderImages(data.hits);\n        page += 1;\n\n        if(data.hits.length < per_page || page > Math.ceil(data.totalHits / per_page)) {\n            loadBtn.style.display = 'none';\n            iziToast.info({ message: 'Вибачте, але ви досягли кінця результатів пошуку'})\n        } else {\n            loadBtn.style.display = 'block';\n        }\n    } catch (error) {\n        loadBtn.style.display = 'none';\n        iziToast.error({title: 'Error', message: error.message});\n    }\n};\n\nloadBtn.addEventListener('click', async () => {\n    await fetchRenderImages();\n    const galleryRect = document.querySelector('.gallery').lastElementChild.getBoundingClientRect();\n    window.scrollBy({\n        top: galleryRect.height * 2,\n        behavior: 'smooth'\n    });\n});"],"names":["API_KEY","BASE_URL","fetchImages","query","page","per_page","axios","error","lightbox","renderImages","images","gallery","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","SimpleLightbox","form","loader","loadBtn","event","iziToast","fetchRenderImages","data","galleryRect"],"mappings":"owBAEA,MAAMA,EAAU,qCACVC,EAAW,2BAKFC,EAAc,MAAOC,EAAOC,EAAO,EAAGC,EAAW,KAAO,CACnE,GAAI,CAYA,OAXiB,MAAMC,EAAM,IAAIL,EAAU,CACvC,OAAQ,CACJ,IAAKD,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,SAAAE,EACA,KAAAD,CACH,CACb,CAAS,GACe,IACnB,OAAQG,EAAO,CACZ,cAAQ,IAAI,yBAA0BA,CAAK,EACrCA,CACT,CACL,ECvBA,IAAIC,EAEG,SAASC,EAAaC,EAAQ,CACnC,MAAMC,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAASF,EACZ,IACC,CAAC,CAAE,aAAAG,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAW,IACvE;AAAA,qBACaL,CAAa;AAAA;AAAA,0BAERD,CAAY,UAAUE,CAAI;AAAA,2CACTC,CAAK;AAAA,2CACLC,CAAK;AAAA,8CACFC,CAAQ;AAAA,+CACPC,CAAS;AAAA;AAAA;AAAA,cAInD,EACA,KAAK,EAAE,EAEVR,EAAQ,mBAAmB,YAAaC,CAAM,EAEzCJ,EAGHA,EAAS,QAAO,EAFhBA,EAAW,IAAIY,EAAe,YAAY,CAI9C,CC1BA,MAAMC,EAAO,SAAS,cAAc,cAAc,EAC5CC,EAAS,SAAS,cAAc,SAAS,EACzCX,EAAU,SAAS,cAAc,UAAU,EAC3CY,EAAU,SAAS,cAAc,WAAW,EAElD,IAAIpB,EAAQ,GACRC,EAAO,EACPC,EAAW,GAEfgB,EAAK,iBAAiB,SAAU,MAAOG,GAAU,CAI7C,GAHAA,EAAM,eAAc,EACnBrB,EAAQqB,EAAM,cAAc,SAAS,YAAY,MAAM,OAErD,CAACrB,EAAO,CACPsB,EAAS,MAAM,CACX,MAAO,QAAS,QAAS,qCAAuC,CAAA,EAChE,MACP,CACArB,EAAO,EACPO,EAAQ,UAAY,GACpBY,EAAQ,MAAM,QAAU,OACxBG,GACL,CAAC,EACD,MAAMA,EAAoB,SAAY,CAClC,GAAI,CACAJ,EAAO,MAAM,QAAS,QACtB,MAAMK,EAAO,MAAMzB,EAAYC,EAAOC,EAAMC,CAAQ,EAGpD,GAFAiB,EAAO,MAAM,QAAU,OAEpBK,EAAK,KAAK,SAAW,EAAG,CACvBF,EAAS,KAAK,CACV,QAAS,oGACzB,CAAa,EACDF,EAAQ,MAAM,QAAU,OACxB,MACH,CACDd,EAAakB,EAAK,IAAI,EACtBvB,GAAQ,EAELuB,EAAK,KAAK,OAAStB,GAAYD,EAAO,KAAK,KAAKuB,EAAK,UAAYtB,CAAQ,GACxEkB,EAAQ,MAAM,QAAU,OACxBE,EAAS,KAAK,CAAE,QAAS,kDAAkD,CAAC,GAE5EF,EAAQ,MAAM,QAAU,OAE/B,OAAQhB,EAAO,CACZgB,EAAQ,MAAM,QAAU,OACxBE,EAAS,MAAM,CAAC,MAAO,QAAS,QAASlB,EAAM,OAAO,CAAC,CAC1D,CACL,EAEAgB,EAAQ,iBAAiB,QAAS,SAAY,CAC1C,MAAMG,EAAiB,EACvB,MAAME,EAAc,SAAS,cAAc,UAAU,EAAE,iBAAiB,wBACxE,OAAO,SAAS,CACZ,IAAKA,EAAY,OAAS,EAC1B,SAAU,QAClB,CAAK,CACL,CAAC"}